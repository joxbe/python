#!/usr/bin/env python

from getpass import getpass
from netmiko import ConnectHandler
from netmiko.ssh_exception import NetMikoTimeoutException
from paramiko.ssh_exception import SSHException
from netmiko.ssh_exception import AuthenticationException


def vlanchange(dc, command):
    for devices in dc:
        print('Connecting to device and running: {}'.format(command) + devices)
        ip_address_of_device = devices
        ios_device = {
            'device_type': 'cisco_ios',
            'ip': ip_address_of_device,
            'username': username,
            'password': password
        }

        try:
            net_connect = ConnectHandler(**ios_device)
        except AuthenticationException:
            print('Authentication failure: ' + ip_address_of_device)
            continue
        except NetMikoTimeoutException:
            print('Timeout to device: ' + ip_address_of_device)
            continue
        except EOFError:
            print('End of file while attempting device ' + ip_address_of_device)
            continue
        except SSHException:
            print('SSH Issue. Are you sure SSH is enabled? ' + ip_address_of_device)
            continue
        except Exception as unknown_error:
            print('Some other error: ' + str(unknown_error))
            continue

        output = net_connect.send_config_set(command)
        print(output)

menu = {}
menu['1'] = "PACS Vlan 889"
menu['2'] = "ISCV Vlan 383"
menu['3'] = "Rhapsody Vlan 188"
menu['4'] = "Exit"

while True:
    options = sorted(menu.keys())

    for entry in options:
        print(entry, menu[entry])

    vlan = input("Please Select which vlan you would like to change: ")

    if vlan == "1":

        vlanmenu = {}
        vlanmenu['1'] = "MV"
        vlanmenu['2'] = "Boise"
        vlanmenu['3'] = "Exit"

        while True:
            options = sorted(vlanmenu.keys())

            for entry in options:
                print(entry, vlanmenu[entry])

            dc = input("Which DC needs to be active?")

            with open('enable_pacs') as f:
                enable_pacs = f.read().splitlines()

            with open('disable_pacs') as f:
                disable_pacs = f.read().splitlines()

            with open('Boise') as f:
                boise = f.read().splitlines()

            with open('MV') as f:
                mv = f.read().splitlines()

            if dc == "1":

                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(boise, disable_pacs)

                vlanchange(mv, enable_pacs)
                exit()

            elif dc == "2":
                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(mv, disable_pacs)

                vlanchange(boise, enable_pacs)
                exit()

            elif dc == "3":
                exit()

            else:
                print("Not a valid selection, please select again")
                break

    elif vlan == "2":

        vlanmenu = {}
        vlanmenu['1'] = "MV"
        vlanmenu['2'] = "Boise"
        vlanmenu['3'] = "Exit"

        while True:
            options = sorted(vlanmenu.keys())

            for entry in options:
                print(entry, vlanmenu[entry])

            dc = input("Which DC needs to be active?")

            with open('enable_iscv') as f:
                enable_iscv = f.read().splitlines()

            with open('disable_iscv') as f:
                disable_iscv = f.read().splitlines()

            with open('Boise') as f:
                boise = f.read().splitlines()

            with open('MV') as f:
                mv = f.read().splitlines()

            if dc == "1":

                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(boise, disable_iscv)

                vlanchange(mv, enable_iscv)
                exit()

            elif dc == "2":
                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(mv, disable_iscv)

                vlanchange(boise, enable_iscv)
                exit()

            elif dc == "3":
                exit()

            else:
                print("Not a valid selection, please select again")
                break

    elif vlan == "3":

        vlanmenu = {}
        vlanmenu['1'] = "MV"
        vlanmenu['2'] = "Boise"
        vlanmenu['3'] = "Exit"

        while True:
            options = sorted(vlanmenu.keys())

            for entry in options:
                print(entry, vlanmenu[entry])

            dc = input("Which DC needs to be active?")

            with open('enable_rhapsody') as f:
                enable_rhapsody = f.read().splitlines()

            with open('disable_rhapsody') as f:
                disable_rhapsody = f.read().splitlines()

            with open('Boise') as f:
                boise = f.read().splitlines()

            with open('MV') as f:
                mv = f.read().splitlines()

            if dc == "1":

                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(boise, disable_rhapsody)

                vlanchange(mv, enable_rhapsody)
                exit()

            elif dc == "2":
                username = input('Enter your SSH username: ')
                password = getpass()

                vlanchange(mv, disable_rhapsody)

                vlanchange(boise, enable_rhapsody)
                exit()

            elif dc == "3":
                exit()

            else:
                print("Not a valid selection, please select again")
                break

    elif vlan == "4":
        break
    else:
        print("Not a valid selection")
        break
